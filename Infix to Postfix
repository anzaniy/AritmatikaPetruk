#include <iostream>
#include <string>
#include <bits/stdc++.h>

using namespace std;

int OrNot(char a){
    if (a == '%' || a == '/' || a == '*' || a == '+' || a == '-' || a == '(')
    return 1;
    return 0;
}

int Priority(char b){
    if (b == '%')
    return 3;
    else if (b == '/' || b == '*')
    return 2;
    else if (b == '+' || b == '-')
    return 1;
}

string InfixToPostfix(string expression){
    string output;
    stack<char> Stack;
    
    cout << "Print : ";
    for (int c=0; c<expression.length(); c++){
    	
        char character = expression[c];
        if (isalnum(character)){
            output.push_back(character);
        }
		else if (OrNot(character)){
        	while (!Stack.empty() && Stack.top() != '(' && Priority(Stack.top()) >= Priority(character)){
                output.push_back(Stack.top());
                Stack.pop();
            }Stack.push(character);
        }
		else if (character == ')'){
            while (Stack.top() != '('){
                output.push_back(Stack.top());
                Stack.pop();
            }Stack.pop();
        }
    }

    while (!Stack.empty()){
        output.push_back(Stack.top());
        Stack.pop();
    }return output;
}
int main(){
    char infix[20];
    cin.getline(infix, 20);
    cout << InfixToPostfix(infix);
}
